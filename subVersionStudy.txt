Link : http://svnbook.red-bean.com/en/1.7/svn-book.pdf

Subversion : free/open source version control system (VCS).

Subversion's Components
   svn : The command-line client program.
   svnversion : A program for reporting the state (in terms of revisions of the items present) of a working copy.
   svnlook : A tool for directly inspecting a Subversion repository.
   svnadmin : A tool for creating, tweaking, or repairing a Subversion repository.
   mod_dav_svn : A plug-in module for the Apache HTTP Server, used to make your repository available to others over a network.
   svnserve : A custom standalone server program, runnable as a daemon process or invokable by SSH; another way to make your repository.
   available to others over a network.
   svndumpfilter  : A program for filtering Subversion repository dump streams.
   svnsync : A program for incrementally mirroring one repository to another over a network.
   svnrdump : A program for performing repository history dumps and loads over a network.

Cautions for using Subversions:
   Unix based cmd interface.
   backward slashes Â¥ instead of forward slashes / for path separators.

Vocabulary:
   top-down learner : gets a large overview first before getting into real work.
   bottom-up learner : learn by doing. Start the work first and get the big picture later.

//SV = Subversion

SV's Fundamental Concepts
   Repository : a central store of the system's data( filesystem tree form).
   copy-modify-merge solution instead of lock-modify-unlock solution.
   out-of-date error : local file is older than the repository's file.
      Other workers might have merged their files into repository.
      In git language, we can put this as 'conflict'.
   When 'locking' is needed : binary files like img,psd,or sound.
   Most important tip for avoiding 'conflict' : communicate with team.

   Repository access URLs:
      file:/// Direct repository access (on local disk)
      http://  Access via WebDAV protocol to Subversion-aware Apache server
      https:// Same as http://, but with SSL encapsulation (encryption and authentication)
      svn://   Access via custom protocol to an svnserve server
      svn+ssh://  Same as svn://, but through an SSH tunnel
      ^/ : directory of root of the repository

   Working copy:
      SV records 1.working revision & 2.timestamp recording
      Unchanged, and current : 
         Local - no changes
         Repository - no changes

      Locally changed, and current : 
         Local - changes exist (svn commit)
         Repository - no changes

      Unchanged, and out of date :
         Local - no changes
         Repository - changes exist (svn update)

      Locally changed, and out of date :
         Local - changes exist (svn commit)
         Repository - changes exist (svn update)
         *update -> commit
         *if fails to merge, fix conflict manually
      
      To get the working copy: 
         1. check out some subtree of the repository 
            *check out = create a working copy of the project.
            ex) 
               $ svn checkout http://svn.example.com/repos/calc
               A  calc/Makefile
               A  calc/integer.c
               A  calc/button.c
               Checked out revision 56.
               $ ls -A calc
               Makefile button.c integer.c .svn/
               $

            A's means SV is adding some items to the working copy.
            .svn./ holds extra information needed by SV.

      To publish your change to others:
         svn commit
            ex)
               $ svn commit button.c -m "Fixed a typo in button.c."
               Sending     button.c
               Transmitting file data .
               Committed revision 57.
               $

      To update working copy
         svn update
            ex)
               $ pwd
               /home/sally/calc
               $ ls -A
               $ svn update
               Updating '.':
               U    button.c
               Updated to revision 57.
               $
      
      *updates and commits are separate.


Basic Usage
   $ svn help : built-in documentation
   $ svn help [SUBCOMMAND] : show full usage message for the command.
   

         


